



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `SmartShopConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=.\MSSQLSERVER2014;Initial Catalog=DAn_Web2;Integrated Security=True`
//     Schema:                 ``
//     Include Views:          `True`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;
using System.ComponentModel.DataAnnotations;

namespace SmartShopConnection
{

	public partial class SmartShopConnectionDB : Database
	{
		public SmartShopConnectionDB() 
			: base("SmartShopConnection")
		{
			CommonConstruct();
		}

		public SmartShopConnectionDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			SmartShopConnectionDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static SmartShopConnectionDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new SmartShopConnectionDB();
        }

		[ThreadStatic] static SmartShopConnectionDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static SmartShopConnectionDB repo { get { return SmartShopConnectionDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.viewUser")]



	[ExplicitColumns]
    public partial class viewUser : SmartShopConnectionDB.Record<viewUser>  
    {

        [Column]
        public string UserId { get; set; }
        [Display(Name = "Họ và tên ")]
		[Column] public string HoTen { get; set; }




        [Display(Name = "Email ")]
		[Column] public string Email { get; set; }




        [Display(Name = "Điện thoại ")]
		[Column] public string DienThoai { get; set; }




        [Display(Name = "Địa chỉ ")]
		[Column] public string DiaChi { get; set; }




        [Display(Name = "Username ")]
		[Column] public string UserName { get; set; }




        [Display(Name = "Phân quyền ")]
		[Column] public string Name { get; set; }



	}

    

	[TableName("dbo.__MigrationHistory")]



	[PrimaryKey("MigrationId", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class __MigrationHistory : SmartShopConnectionDB.Record<__MigrationHistory>  
    {



		[Column] public string MigrationId { get; set; }





		[Column] public string ContextKey { get; set; }





		[Column] public byte[] Model { get; set; }





		[Column] public string ProductVersion { get; set; }



	}

    

	[TableName("dbo.AspNetRoles")]



	[PrimaryKey("Id", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class AspNetRole : SmartShopConnectionDB.Record<AspNetRole>  
    {



		[Column] public string Id { get; set; }





		[Column] public string Name { get; set; }



	}

    

	[TableName("dbo.AspNetUserClaims")]



	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class AspNetUserClaim : SmartShopConnectionDB.Record<AspNetUserClaim>  
    {



		[Column] public int Id { get; set; }





		[Column] public string ClaimType { get; set; }





		[Column] public string ClaimValue { get; set; }





		[Column] public string User_Id { get; set; }



	}

    

	[TableName("dbo.AspNetUserLogins")]



	[PrimaryKey("UserId", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class AspNetUserLogin : SmartShopConnectionDB.Record<AspNetUserLogin>  
    {



		[Column] public string UserId { get; set; }





		[Column] public string LoginProvider { get; set; }





		[Column] public string ProviderKey { get; set; }



	}

    

	[TableName("dbo.AspNetUserRoles")]



	[PrimaryKey("UserId", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class AspNetUserRole : SmartShopConnectionDB.Record<AspNetUserRole>  
    {



		[Column] public string UserId { get; set; }





		[Column] public string RoleId { get; set; }



	}

    

	[TableName("dbo.Comment")]



	[PrimaryKey("IDCmt")]



	[ExplicitColumns]
    public partial class Comment : SmartShopConnectionDB.Record<Comment>  
    {



		[Column] public int IDCmt { get; set; }





		[Column] public string UserCmt { get; set; }



        [Display(Name = "Nội dung ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string NoiDung { get; set; }





		[Column] public string MaSP { get; set; }



	}

    

	[TableName("dbo.ChiTietDH")]



	[ExplicitColumns]
    public partial class ChiTietDH : SmartShopConnectionDB.Record<ChiTietDH>  
    {


        [Display(Name = "Mã đơn hàng ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public int? MaDH { get; set; }




        [Display(Name = "Mã sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string MaSP { get; set; }




        [Display(Name = "Số lượng ")]
		[Column] public int? SoLuong { get; set; }




        [Display(Name = "Đơn giá ")]
		[Column] public string DonGia { get; set; }




        [Display(Name = "Tổng tiền ")]
		[Column] public int? TongTien { get; set; }



	}

    

	[TableName("dbo.ChungLoai")]



	[PrimaryKey("MaCL", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class ChungLoai : SmartShopConnectionDB.Record<ChungLoai>  
    {


        [Display(Name = "Mã chủng loại ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public int MaCL { get; set; }




        [Display(Name = "Tên chủng loại ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string TenCL { get; set; }



	}

    

	[TableName("dbo.DonDatHang")]



	[PrimaryKey("MaDH")]



	[ExplicitColumns]
    public partial class DonDatHang : SmartShopConnectionDB.Record<DonDatHang>  
    {

        public IEnumerable<ChiTietDH> DsctDH { get; set; }
        [Display(Name = "Mã đơn hàng ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public int MaDH { get; set; }




        [Display(Name = "Username ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string Username { get; set; }




        [Display(Name = "Ngày đặt hàng ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public DateTime? NgayDatHang { get; set; }




        [Display(Name = "Họ tên khách mua hàng ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string HoTen { get; set; }




        [Display(Name = "Số điện thoại ")]
		[Column] public string SDT { get; set; }




        [Display(Name = "Địa chỉ ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string DiaChi { get; set; }




        [Display(Name = "Email ")]
		[Column] public string Email { get; set; }




        [Display(Name = "Tình trạng ")]
		[Column] public int? TinhTrang { get; set; }




        [Display(Name = "Ghi chú ")]
		[Column] public string GhiChu { get; set; }




        [Display(Name = "Thành tiền ")]
		[Column] public int? Tongtien { get; set; }



	}

    

	[TableName("dbo.Loai")]



	[PrimaryKey("MaLoai", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class Loai : SmartShopConnectionDB.Record<Loai>  
    {
        public IEnumerable<ChungLoai> dsCL { get; set; }
        [Display(Name = "Mã loại ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string MaLoai { get; set; }




        [Display(Name = "Tên loại ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string TenLoai { get; set; }




        [Display(Name = "Chủng loại ")]
		[Column] public int? MaCL { get; set; }



	}

    

	[TableName("dbo.Product")]



	[PrimaryKey("MaSP", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class Product : SmartShopConnectionDB.Record<Product>  
    {

        [Display(Name = "Hình sản phẩm")]
        [DataType(DataType.Upload)]
        public HttpPostedFileBase ImageUpload2 { get; set; }
        public IEnumerable<Loai> dsLoai { get; set; }
        [Display(Name = "Mã sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string MaSP { get; set; }




        [Display(Name = "Tên sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string TenSP { get; set; }




        [Display(Name = "Giá ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string Gia { get; set; }




        [Display(Name = "Mô tả ")]
		[Column] public string MoTa { get; set; }




        [Display(Name = "Loại sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string LoaiSP { get; set; }




        [Display(Name = "Hệ điều hành ")]
		[Column] public string HeDieuHanh { get; set; }




        [Display(Name = "Lượt xem ")]
		[Column] public int? LuotXem { get; set; }




        [Display(Name = "Ngày đăng sản phẩm ")]
		[Column] public DateTime? NgayDangSP { get; set; }




        [Display(Name = "Hình sản phẩm ")]
		[Column] public string Hinh { get; set; }



	}

    

	[TableName("dbo.Accounts")]



	[PrimaryKey("UserName", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class Account : SmartShopConnectionDB.Record<Account>  
    {



		[Column] public string UserName { get; set; }




        [Display(Name = "Họ và tên ")]
		[Column] public string HoTen { get; set; }




        [Display(Name = "Email ")]
        [RegularExpression(@"[a-zA-Z0-9_]+\@[a-zA-Z0-9]+\.[a-zA-Z0-9]+", ErrorMessage = "Không phải định dạng {0}")]
		[Column] public string Email { get; set; }




        [Display(Name = "Điện thoại ")]
        [RegularExpression(@"0((9\d{8})|(1\d{9})|(88\d{7}))", ErrorMessage = "Không phải định dạng {0}")]
		[Column] public string DienThoai { get; set; }




        [Display(Name = "Địa chỉ ")]
		[Column] public string DiaChi { get; set; }

        public string Name { get; set; }

	}

    

	[TableName("dbo.viewAdProduct")]



	[ExplicitColumns]
    public partial class viewAdProduct : SmartShopConnectionDB.Record<viewAdProduct>  
    {

        [Display(Name = "Hình sản phẩm")]
        [DataType(DataType.Upload)]
        public HttpPostedFileBase ImageUpload { get; set; }
        public IEnumerable<Loai> dsLoai { get; set; }
        
        [Display(Name = "Mã sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string MaSP { get; set; }




        [Display(Name = "Tên sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string TenSP { get; set; }




        [Display(Name = "Giá sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string Gia { get; set; }




        [Display(Name = "Mô tả ")]
		[Column] public string MoTa { get; set; }




        [Display(Name = "Loại sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string LoaiSP { get; set; }




        [Display(Name = "Hệ điều hành ")]
		[Column] public string HeDieuHanh { get; set; }




        [Display(Name = "Lượt xem ")]
		[Column] public int? LuotXem { get; set; }




        [Display(Name = "Ngày đăng sảnp hẩm ")]
		[Column] public DateTime? NgayDangSP { get; set; }




        [Display(Name = "Loại sản phẩm ")]
		[Column] public string TenLoai { get; set; }




        [Display(Name = "Chủng loại sản phẩm ")]
		[Column] public string TenCL { get; set; }

        [Display(Name = "Hình sản phẩm ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
        [Column]
        public string Hinh { get; set; }

	}

    

	[TableName("dbo.viewLoai")]



	[ExplicitColumns]
    public partial class viewLoai : SmartShopConnectionDB.Record<viewLoai>  
    {


        [Display(Name = "Chủng loại ")]
		[Column] public string TenCL { get; set; }




        [Display(Name = "Mã loại ")]
		[Column] public string MaLoai { get; set; }




        [Display(Name = "Tên loại ")]
		[Column] public string TenLoai { get; set; }



	}

    

	[TableName("dbo.viewMenu")]



	[ExplicitColumns]
    public partial class viewMenu : SmartShopConnectionDB.Record<viewMenu>  
    {

        public IEnumerable<Loai> dsLoai { get; set; }
        [Display(Name = "Mã chủng laoị ")]
		[Column] public int MaCL { get; set; }




        [Display(Name = "Tên chủng loại ")]
		[Column] public string TenCL { get; set; }




        [Display(Name = "Mã loại ")]
		[Column] public string MaLoai { get; set; }




        [Display(Name = "Tên loại ")]
		[Column] public string TenLoai { get; set; }



	}

    

	[TableName("dbo.Image")]



	[PrimaryKey("IMGName", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class Image : SmartShopConnectionDB.Record<Image>  
    {



		[Column] public string IMGName { get; set; }





		[Column] public string MaSP { get; set; }



	}

    

	[TableName("dbo.sysdiagrams")]



	[PrimaryKey("diagram_id")]



	[ExplicitColumns]
    public partial class sysdiagram : SmartShopConnectionDB.Record<sysdiagram>  
    {



		[Column] public string name { get; set; }





		[Column] public int principal_id { get; set; }





		[Column] public int diagram_id { get; set; }





		[Column] public int? version { get; set; }





		[Column] public byte[] definition { get; set; }



	}

    

	[TableName("dbo.AspNetUsers")]



	[PrimaryKey("Id", AutoIncrement=false)]

	[ExplicitColumns]
    public partial class AspNetUser : SmartShopConnectionDB.Record<AspNetUser>  
    {


        [Display(Name = "ID User ")]
		[Column] public string Id { get; set; }




        [Display(Name = "UserName ")]
        [Required(ErrorMessage = "Không được bỏ trống {0}")]
		[Column] public string UserName { get; set; }





		[Column] public string PasswordHash { get; set; }





		[Column] public string SecurityStamp { get; set; }





		[Column] public string Discriminator { get; set; }



	}


}



